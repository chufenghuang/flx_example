package blackjack.Natural;
import blackjack.*;
import res.*;
import external.*;/**

 Blackjack**/

import java.io.Serializable;
import rmi.RMIService;
import java.lang.Cloneable;
import java.util.HashMap;
import java.util.Map;
import java.util.List;
import java.util.LinkedList;
import java.util.concurrent.Executors;
import java.util.concurrent.ExecutorService;

public class NaturalFeature
 extends BlackjackDomain implements Serializable 
{

BasicBJFeature _basicbjfeature;
private boolean activated = true;
Map<String, Boolean> previousState = new HashMap<String, Boolean>();
public EventBuffer<FL_EVENT_STEM> sharedBuffer;

public EventBuffer<FL_EVENT_STEM> getSharedBuffer(){
return this.sharedBuffer;
}
public void activate() { }
public void deactivate() { }
public boolean isActivated() { return activated; }
public FL_EVENT_STEM when_event_variable;

public NaturalFeature(  Player  player ,   Dealer  dealer) {
super();
BlackjackDomain.deck = deck;
BlackjackDomain.dealer = dealer;
BlackjackDomain.player = player;
BlackjackDomain.state = State  . INIT;
{Map<String, Boolean>currentState= new HashMap<String, Boolean>(previousState);
currentState.put("blackjackdomain.state.equalstoconstant(state.play)",BlackjackDomain.state.equalsToConstant(State.PLAY));
currentState.put("blackjackdomain.state.equalstoconstant(state.deal_card)",BlackjackDomain.state.equalsToConstant(State.DEAL_CARD));
currentState.put("blackjackdomain.state.equalstoconstant(state.end)",BlackjackDomain.state.equalsToConstant(State.END));
currentState.put("blackjackdomain.state.equalstoconstant(state.judge)",BlackjackDomain.state.equalsToConstant(State.JUDGE));
previousState = new HashMap<String, Boolean>(currentState);}
sharedBuffer = new EventBuffer<FL_EVENT_STEM>();
this._basicbjfeature = new BasicBJFeature();
this._basicbjfeature.sharedBuffer = sharedBuffer;
ExecutorService threadExecuter = Executors.newCachedThreadPool();
Consumer consumer = new Consumer(sharedBuffer);
threadExecuter.execute(consumer);
}
class Consumer implements Runnable{
private EventBuffer<FL_EVENT_STEM> buffer;
public Consumer(EventBuffer<FL_EVENT_STEM> buffer){
this.buffer = buffer;
}
public void run() {
while(true){
try{
NaturalFeature.this.XEvent((FL_EVENT_STEM)buffer.remove());
}catch(Exception ex){
ex.printStackTrace();
}//end of catch
}//end of while
}//end of run
}//end of Consumer Class
public  NaturalFeature(BasicBJFeature _basicbjfeature)
 {
super();
this._basicbjfeature = _basicbjfeature;
}
/***********************************/

 ;

 
         
      
 
 /**********************************/
public synchronized void naturalEnterPlay( FL_EVENT_STEM  e)
{
try { 
if (activated)
{
if ( player . isBJ ( ) ) {
state = State . JUDGE ;
}
}

} 
finally {}
}


 
         
      
 
 public boolean get_naturalLeavePlay_0_condition(){
return (player.isBJ());
}
/**********************************/
public synchronized void naturalLeavePlay_0( FL_EVENT_STEM  e)
{
try { 
if (activated)
{
if ( dealer . isAJKQOpenCard ( ) ) {
dealer . openFaceDownCards ( ) ;
}
}

} 
finally {}
}


public void sendEvent( FL_EVENT_STEM e ) {
	sharedBuffer.add(e);
}
public synchronized void XEvent(final FL_EVENT_STEM e )
{
this.when_event_variable = e;
this._basicbjfeature.when_event_variable = e;
{Map<String, Boolean>currentState= new HashMap<String, Boolean>(previousState);
currentState.put("blackjackdomain.state.equalstoconstant(state.play)",BlackjackDomain.state.equalsToConstant(State.PLAY));
currentState.put("blackjackdomain.state.equalstoconstant(state.deal_card)",BlackjackDomain.state.equalsToConstant(State.DEAL_CARD));
currentState.put("blackjackdomain.state.equalstoconstant(state.end)",BlackjackDomain.state.equalsToConstant(State.END));
currentState.put("blackjackdomain.state.equalstoconstant(state.judge)",BlackjackDomain.state.equalsToConstant(State.JUDGE));
previousState = new HashMap<String, Boolean>(currentState);}
		if ( e instanceof Hit) {
boolean _basicbjfeaturehitAtPlaynotskip = true;
if (_basicbjfeaturehitAtPlaynotskip == true &&(BlackjackDomain.state.equalsToConstant(State.PLAY))) {
 if((BlackjackDomain.state.equalsToConstant(State.PLAY))) _basicbjfeature.hitAtPlay((Hit) e);

}			}
		else if ( e instanceof Stand) {
boolean _basicbjfeaturestandAtPlaynotskip = true;
if (_basicbjfeaturestandAtPlaynotskip == true &&(BlackjackDomain.state.equalsToConstant(State.PLAY))) {
 if((BlackjackDomain.state.equalsToConstant(State.PLAY))) _basicbjfeature.standAtPlay((Stand) e);

}			}
		else if ( e instanceof Init) {
boolean _basicbjfeatureinitializenotskip = true;
if (_basicbjfeatureinitializenotskip == true &&(BlackjackDomain.state.equalsToConstant(State.INIT))) {
 if((BlackjackDomain.state.equalsToConstant(State.INIT))) _basicbjfeature.initialize((Init) e);

}			}
else{/* no event matched*/}
{Map<String, Boolean>currentState= new HashMap<String, Boolean>(previousState);
currentState.put("blackjackdomain.state.equalstoconstant(state.play)",BlackjackDomain.state.equalsToConstant(State.PLAY));
currentState.put("blackjackdomain.state.equalstoconstant(state.deal_card)",BlackjackDomain.state.equalsToConstant(State.DEAL_CARD));
currentState.put("blackjackdomain.state.equalstoconstant(state.end)",BlackjackDomain.state.equalsToConstant(State.END));
currentState.put("blackjackdomain.state.equalstoconstant(state.judge)",BlackjackDomain.state.equalsToConstant(State.JUDGE));
if(currentState.equals(previousState))return;}
boolean possibleEnter = true; boolean possibleLeave = true;
Map<String, Boolean> temp;
while(true){
boolean noLeaveEvent = true;
boolean noEnterEvent = true;
temp = new HashMap<String, Boolean>(previousState);
temp.put("blackjackdomain.state.equalstoconstant(state.end)",BlackjackDomain.state.equalsToConstant(State.END));
temp.put("blackjackdomain.state.equalstoconstant(state.judge)",BlackjackDomain.state.equalsToConstant(State.JUDGE));
temp.put("blackjackdomain.state.equalstoconstant(state.play)",BlackjackDomain.state.equalsToConstant(State.PLAY));
temp.put("blackjackdomain.state.equalstoconstant(state.deal_card)",BlackjackDomain.state.equalsToConstant(State.DEAL_CARD));
if(possibleLeave){
if (!(BlackjackDomain.state.equalsToConstant(State.PLAY)) && previousState.get("blackjackdomain.state.equalstoconstant(state.play)") && (this.get_naturalLeavePlay_0_condition())) {
boolean thisnaturalLeavePlay_0notskip = true;
boolean thisnaturalLeavePlay_0WhenCondtionResult = this.get_naturalLeavePlay_0_condition();
boolean _basicbjfeaturedealCardToDealernotskip = true;
boolean _basicbjfeatureleaveAtPlaynotskip = true;
if (thisnaturalLeavePlay_0WhenCondtionResult &&thisnaturalLeavePlay_0notskip == true && !(BlackjackDomain.state.equalsToConstant(State.PLAY)) && previousState.get("blackjackdomain.state.equalstoconstant(state.play)")) {
noLeaveEvent = false;
 if(!(BlackjackDomain.state.equalsToConstant(State.PLAY))) this.naturalLeavePlay_0(e);

_basicbjfeaturedealCardToDealernotskip = false;
_basicbjfeatureleaveAtPlaynotskip = false;
}if (_basicbjfeaturedealCardToDealernotskip == true && !(BlackjackDomain.state.equalsToConstant(State.DEAL_CARD)) && previousState.get("blackjackdomain.state.equalstoconstant(state.deal_card)")) {
noLeaveEvent = false;
 if(!(BlackjackDomain.state.equalsToConstant(State.DEAL_CARD))) _basicbjfeature.dealCardToDealer(e);

_basicbjfeatureleaveAtPlaynotskip = false;
}if (_basicbjfeatureleaveAtPlaynotskip == true && !(BlackjackDomain.state.equalsToConstant(State.PLAY)) && previousState.get("blackjackdomain.state.equalstoconstant(state.play)")) {
noLeaveEvent = false;
 if(!(BlackjackDomain.state.equalsToConstant(State.PLAY))) _basicbjfeature.leaveAtPlay(e);

}}
else {
boolean thisnaturalLeavePlay_0notskip = true;
boolean _basicbjfeaturedealCardToDealernotskip = true;
boolean _basicbjfeatureleaveAtPlaynotskip = true;
if ((this.get_naturalLeavePlay_0_condition()) &&thisnaturalLeavePlay_0notskip == true && !(BlackjackDomain.state.equalsToConstant(State.PLAY)) && previousState.get("blackjackdomain.state.equalstoconstant(state.play)")) {
noLeaveEvent = false;
 if(!(BlackjackDomain.state.equalsToConstant(State.PLAY))) this.naturalLeavePlay_0(e);

}if (_basicbjfeaturedealCardToDealernotskip == true && !(BlackjackDomain.state.equalsToConstant(State.DEAL_CARD)) && previousState.get("blackjackdomain.state.equalstoconstant(state.deal_card)")) {
noLeaveEvent = false;
 if(!(BlackjackDomain.state.equalsToConstant(State.DEAL_CARD))) _basicbjfeature.dealCardToDealer(e);

_basicbjfeatureleaveAtPlaynotskip = false;
}if (_basicbjfeatureleaveAtPlaynotskip == true && !(BlackjackDomain.state.equalsToConstant(State.PLAY)) && previousState.get("blackjackdomain.state.equalstoconstant(state.play)")) {
noLeaveEvent = false;
 if(!(BlackjackDomain.state.equalsToConstant(State.PLAY))) _basicbjfeature.leaveAtPlay(e);

}}
}
if(!noLeaveEvent){
Map<String, Boolean>temp2 = new HashMap<String, Boolean>(previousState);
temp2.put("blackjackdomain.state.equalstoconstant(state.end)",BlackjackDomain.state.equalsToConstant(State.END));
temp2.put("blackjackdomain.state.equalstoconstant(state.judge)",BlackjackDomain.state.equalsToConstant(State.JUDGE));
temp2.put("blackjackdomain.state.equalstoconstant(state.deal_card)",BlackjackDomain.state.equalsToConstant(State.DEAL_CARD));
temp2.put("blackjackdomain.state.equalstoconstant(state.play)",BlackjackDomain.state.equalsToConstant(State.PLAY));
if (!temp.equals(temp2)) {previousState = temp;possibleEnter = true;possibleLeave = true; }else{ possibleLeave = false;}
}
temp = new HashMap<String, Boolean>(previousState);
temp.put("blackjackdomain.state.equalstoconstant(state.end)",BlackjackDomain.state.equalsToConstant(State.END));
temp.put("blackjackdomain.state.equalstoconstant(state.judge)",BlackjackDomain.state.equalsToConstant(State.JUDGE));
temp.put("blackjackdomain.state.equalstoconstant(state.play)",BlackjackDomain.state.equalsToConstant(State.PLAY));
temp.put("blackjackdomain.state.equalstoconstant(state.deal_card)",BlackjackDomain.state.equalsToConstant(State.DEAL_CARD));
if(possibleEnter){
boolean thisnaturalEnterPlaynotskip = true;
boolean _basicbjfeatureenterJudgenotskip = true;
boolean _basicbjfeatureenterPlaynotskip = true;
boolean _basicbjfeaturedealCardToPlayernotskip = true;
boolean _basicbjfeatureGameOvernotskip = true;
if (thisnaturalEnterPlaynotskip == true &&(BlackjackDomain.state.equalsToConstant(State.PLAY))&&temp.get("blackjackdomain.state.equalstoconstant(state.play)")&& !previousState.get("blackjackdomain.state.equalstoconstant(state.play)")) {
noEnterEvent = false;
 if((BlackjackDomain.state.equalsToConstant(State.PLAY))) this.naturalEnterPlay(e);

}if (_basicbjfeatureenterJudgenotskip == true &&(BlackjackDomain.state.equalsToConstant(State.JUDGE))&&temp.get("blackjackdomain.state.equalstoconstant(state.judge)")&& !previousState.get("blackjackdomain.state.equalstoconstant(state.judge)")) {
noEnterEvent = false;
 if((BlackjackDomain.state.equalsToConstant(State.JUDGE))) _basicbjfeature.enterJudge(e);

_basicbjfeatureenterPlaynotskip = false;
_basicbjfeaturedealCardToPlayernotskip = false;
_basicbjfeatureGameOvernotskip = false;
}if (_basicbjfeatureenterPlaynotskip == true &&(BlackjackDomain.state.equalsToConstant(State.PLAY))&&temp.get("blackjackdomain.state.equalstoconstant(state.play)")&& !previousState.get("blackjackdomain.state.equalstoconstant(state.play)")) {
noEnterEvent = false;
 if((BlackjackDomain.state.equalsToConstant(State.PLAY))) _basicbjfeature.enterPlay(e);

_basicbjfeaturedealCardToPlayernotskip = false;
_basicbjfeatureGameOvernotskip = false;
}if (_basicbjfeaturedealCardToPlayernotskip == true &&(BlackjackDomain.state.equalsToConstant(State.DEAL_CARD))&&temp.get("blackjackdomain.state.equalstoconstant(state.deal_card)")&& !previousState.get("blackjackdomain.state.equalstoconstant(state.deal_card)")) {
noEnterEvent = false;
 if((BlackjackDomain.state.equalsToConstant(State.DEAL_CARD))) _basicbjfeature.dealCardToPlayer(e);

_basicbjfeatureGameOvernotskip = false;
}if (_basicbjfeatureGameOvernotskip == true &&(BlackjackDomain.state.equalsToConstant(State.END))&&temp.get("blackjackdomain.state.equalstoconstant(state.end)")&& !previousState.get("blackjackdomain.state.equalstoconstant(state.end)")) {
noEnterEvent = false;
 if((BlackjackDomain.state.equalsToConstant(State.END))) _basicbjfeature.GameOver(e);

}}
if(!noEnterEvent){
Map<String, Boolean>temp2 = new HashMap<String, Boolean>(previousState);
temp2.put("blackjackdomain.state.equalstoconstant(state.end)",BlackjackDomain.state.equalsToConstant(State.END));
temp2.put("blackjackdomain.state.equalstoconstant(state.judge)",BlackjackDomain.state.equalsToConstant(State.JUDGE));
temp2.put("blackjackdomain.state.equalstoconstant(state.deal_card)",BlackjackDomain.state.equalsToConstant(State.DEAL_CARD));
temp2.put("blackjackdomain.state.equalstoconstant(state.play)",BlackjackDomain.state.equalsToConstant(State.PLAY));
previousState = temp;if (!temp.equals(temp2)) {possibleEnter = true;possibleLeave = true; }else{ possibleEnter = false;}
}
if(noLeaveEvent && noEnterEvent) break;
}
}

public Object clone() throws CloneNotSupportedException {
return super.clone();
}


protected void finalize() {
try {
super.finalize();
} catch(Throwable e) {
// do nothing
}
}

}
/* IntermediateInfo:FeatureInteractionTable
rO0ABXNyACZjb3JlLnRhYmxlLkZlYXR1cmVJbnRlcmFjdGlvblRhYmxlSW1wbKRW9OnaNkzmAgAFWgAQaXNGZWF0dXJlTmFtZVNldEwAEmRlZmF1bHRQcmVSZWxhdGlvbnQAKkxjb3JlL2NvbXBpbGVyZXNvdXJjZXMvUHJlY2VkZW5jZVJlbGF0aW9uO0wAB2RvbWFpbnN0AA9MamF2YS91dGlsL1NldDtMAApldmVudE5vZGVzdAAoTGNvcmUvY29tcGlsZXJlc291cmNlcy9FdmVudE5vZGVNYXBJbXBsO0wAC2ZlYXR1cmVOYW1ldAASTGphdmEvbGFuZy9TdHJpbmc7eHABc3IAKWNvcmUuY29kZWdlbmVyYXRvci5QcmVjZWRlbmNlUmVsYXRpb25JbXBspX7kJRXyFGoCAAFMAAlwcmVPcmRlcnN0ABNMamF2YS91dGlsL0hhc2hTZXQ7eHIAJmNvcmUuY29kZWdlbmVyYXRvci5QYXJ0aWFsT3JkZXJpbmdUcmVl2diA5Z4HBGACAAFMAAVub2Rlc3QAFUxqYXZhL3V0aWwvSGFzaHRhYmxlO3hwc3IAE2phdmEudXRpbC5IYXNodGFibGUTuw8lIUrkuAMAAkYACmxvYWRGYWN0b3JJAAl0aHJlc2hvbGR4cD9AAAAAAAAIdwgAAAALAAAAAnQAB05hdHVyYWxzcgAXY29yZS5jb2RlZ2VuZXJhdG9yLk5vZGU57IiELEUMtAIABUkAFGRpcmVjdFByZWRlY2Vzc29yTnVtWgAKd2FzVmlzaXRlZEwAD2RpcmVjdFN1Y2NOb2Rlc3EAfgAJTAAFbGFiZWxxAH4ABEwAC3BhcmVudE5vZGVzcQB+AAd4cAAAAAAAc3EAfgALP0AAAAAAAAh3CAAAAAsAAAABc3EAfgAOAAAAAQBzcQB+AAs/QAAAAAAACHcIAAAACwAAAAB4dAAHQmFzaWNCSnNyABFqYXZhLnV0aWwuSGFzaFNldLpEhZWWuLc0AwAAeHB3DAAAABA/QAAAAAAAAXEAfgAPeHQAEnN0cmFpZ2h0UHJlY2VkZW5jZXhxAH4ADXNxAH4AFHcMAAAAED9AAAAAAAAAeHEAfgATcQB+ABF4c3EAfgAUdwwAAAAQP0AAAAAAAAFzcgATamF2YS51dGlsLkFycmF5TGlzdHiB0h2Zx2GdAwABSQAEc2l6ZXhwAAAAAncEAAAAAnEAfgANcQB+ABN4eHNyABdqYXZhLnV0aWwuTGlua2VkSGFzaFNldNhs11qV3SoeAgAAeHEAfgAUdwwAAAAQP0AAAAAAAAF0AAlCbGFja2phY2t4c3IAJmNvcmUuY29tcGlsZXJlc291cmNlcy5FdmVudE5vZGVNYXBJbXBsaDut0E+PmIICAAFMAANtYXB0AA9MamF2YS91dGlsL01hcDt4cHNxAH4ACz9AAAAAAAAIdwgAAAALAAAAAnQABWxlYXZlc3IAKmNvcmUuY29tcGlsZXJlc291cmNlcy5RdWFsaWZpZXJOb2RlTWFwSW1wbOrz3H3Lq6S1AgABTAADbWFwcQB+AB94cHNxAH4ACz9AAAAAAAAIdwgAAAALAAAAAXQAA2FsbHNyACpjb3JlLmNvbXBpbGVyZXNvdXJjZXMuQ29uZGl0aW9uTm9kZU1hcEltcGx3bBYqvueUaQIAAUwAA21hcHQAKExjb3JlL2NvbXBpbGVyZXNvdXJjZXMvT3JkZXJlZEhhc2h0YWJsZTt4cHNyACZjb3JlLmNvbXBpbGVyZXNvdXJjZXMuT3JkZXJlZEhhc2h0YWJsZXhkoN7SZCEwAgABTAAMa2V5T3JkZXJMaXN0dAAWTGphdmEvdXRpbC9MaW5rZWRMaXN0O3hxAH4ACz9AAAAAAAAIdwgAAAALAAAAAXQANUJsYWNramFja0RvbWFpbi5zdGF0ZS5lcXVhbHNUb0NvbnN0YW50KFN0YXRlICAuIFBMQVkpc3IAJWNvcmUuY29tcGlsZXJlc291cmNlcy5GaXRTdWJlbnRyeVRyZWVjlfz0CwGJqwIAA0wACGNoaWxkcmVudAAQTGphdmEvdXRpbC9MaXN0O0wAEWRlZmF1bHRQcmVjZWRlbmNlcQB+AAFMAAN2YWx0ACNMY29yZS9jb21waWxlcmVzb3VyY2VzL0ZpdFN1YmVudHJ5O3hwc3IAFGphdmEudXRpbC5MaW5rZWRMaXN0DClTXUpgiCIDAAB4cHcEAAAAAXNxAH4ALnNxAH4AMncEAAAAAHhzcQB+AAZzcQB+AAs/QAAAAAAACHcIAAAACwAAAAB4c3EAfgAUdwwAAAAQP0AAAAAAAAB4c3IAJWNvcmUuY29tcGlsZXJlc291cmNlcy5GaXRTdWJlbnRyeUltcGzqOTCcd/Uh5wIAB0kAD2NvbnRhaW5XaGVuRWxzZUwAEGZlYXR1cmVOYW1lRW50cnlxAH4ABEwAC3ByZVJlbGF0aW9ucQB+AAFMABBwcm9ncmFtQm9keUVudHJ5cQB+AARMABBwcm9ncmFtQ29uZGl0aW9ucQB+AARMABRwcm9ncmFtVW5pdE5hbWVFbnRyeXEAfgAETAANd2hlbkNvbmRpdGlvbnQAH0xjb3JlL2xhbmcvQ29uZGl0aW9uRXhwcmVzc2lvbjt4cP////90AAdOYXR1cmFsc3EAfgAGc3EAfgALP0AAAAAAAAh3CAAAAAsAAAACdAAHTmF0dXJhbHNxAH4ADgAAAAAAc3EAfgALP0AAAAAAAAh3CAAAAAsAAAABc3EAfgAOAAAAAQBzcQB+AAs/QAAAAAAACHcIAAAACwAAAAB4dAAHQmFzaWNCSnNxAH4AFHcMAAAAED9AAAAAAAABcQB+AEB4dAAScHJpb3JpdHlQcmVjZWRlbmNleHEAfgA/c3EAfgAUdwwAAAAQP0AAAAAAAAB4cQB+AERxAH4AQnhzcQB+ABR3DAAAABA/QAAAAAAAAHh0AFF7ICBpZiAoIGRlYWxlciAgLiBpc0FKS1FPcGVuQ2FyZCAoKSApIHsgICAgZGVhbGVyICAuIG9wZW5GYWNlRG93bkNhcmRzICgpICA7IH0gIH1xAH4ALXQAEm5hdHVyYWxMZWF2ZVBsYXlfMHNyAB1jb3JlLmxhbmcuQ29uZGl0aW9uRXhwcmVzc2lvboiK4hsevVSUAgAEWgAIbmVnYXRpdmVMAAVjaGlsZHEAfgA6TAAEbmV4dHEAfgA6TAADc3RycQB+AAR4cABwcHQADXBsYXllci5pc0JKKCl4c3EAfgAGc3EAfgALP0AAAAAAAAh3CAAAAAsAAAAAeHNxAH4AFHcMAAAAED9AAAAAAAAAeHB4c3EAfgAydwQAAAABcQB+AC14eHQABWVudGVyc3EAfgAjc3EAfgALP0AAAAAAAAh3CAAAAAsAAAABcQB+ACZzcQB+ACdzcQB+ACo/QAAAAAAACHcIAAAACwAAAAF0ADVCbGFja2phY2tEb21haW4uc3RhdGUuZXF1YWxzVG9Db25zdGFudChTdGF0ZSAgLiBQTEFZKXNxAH4ALnNxAH4AMncEAAAAAXNxAH4ALnNxAH4AMncEAAAAAHhzcQB+AAZzcQB+AAs/QAAAAAAACHcIAAAACwAAAAB4c3EAfgAUdwwAAAAQP0AAAAAAAAB4c3IAJ2NvcmUuY29tcGlsZXJlc291cmNlcy5GaXRQdVN1YmVudHJ5SW1wbMnqIzs+5hOaAgABTAADbWFwcQB+AB94cQB+ADn/////cQB+ADxzcQB+AAZzcQB+AAs/QAAAAAAACHcIAAAACwAAAAB4c3EAfgAUdwwAAAAQP0AAAAAAAAB4dAA7IGlmICggcGxheWVyICAuIGlzQkogKCkgKSB7ICAgIHN0YXRlICA9IFN0YXRlICAuIEpVREdFIDsgfSBxAH4AV3QAEG5hdHVyYWxFbnRlclBsYXlzcQB+AEsAcHB0AAR0cnVlc3IAEWphdmEudXRpbC5IYXNoTWFwBQfawcMWYNEDAAJGAApsb2FkRmFjdG9ySQAJdGhyZXNob2xkeHA/QAAAAAAAAHcIAAAAEAAAAAB4eHNxAH4ABnNxAH4ACz9AAAAAAAAIdwgAAAALAAAAAHhzcQB+ABR3DAAAABA/QAAAAAAAAHhweHNxAH4AMncEAAAAAXEAfgBXeHh4cQB+ADw=

*/


/* IntermediateInfo:MergedFeatureInteractionTable


*/


/* IntermediateInfo:domains
rO0ABXNyABdqYXZhLnV0aWwuTGlua2VkSGFzaFNldNhs11qV3SoeAgAAeHIAEWphdmEudXRpbC5IYXNoU2V0ukSFlZa4tzQDAAB4cHcMAAAAED9AAAAAAAABdAAJQmxhY2tqYWNreA==

*/


/* IntermediateInfo:isExecutable
rO0ABXNyABFqYXZhLmxhbmcuQm9vbGVhbs0gcoDVnPruAgABWgAFdmFsdWV4cAE=

*/


/* IntermediateInfo:proceedToPuhandler
rO0ABXNyABNqYXZhLnV0aWwuQXJyYXlMaXN0eIHSHZnHYZ0DAAFJAARzaXpleHAAAAACdwQAAAACc3IAJ2NvcmUuZGF0YXN0cnVjdHVyZS5Qcm9jZWVkVG9IYW5kbGVySW5mb/NJGznJidC0AgAJTAAJY29uZGl0aW9udAASTGphdmEvbGFuZy9TdHJpbmc7TAAPZXZlbnRJZGVudGlmaWVycQB+AANMAAlldmVudFR5cGVxAH4AA0wAD2ZlYXR1cmVJbnN0YW5jZXEAfgADTAALZmVhdHVyZU5hbWVxAH4AA0wACXByb2NlZWRUb3EAfgADTAARcHJvY2VlZFRvSW5zdGFuY2VxAH4AA0wABnB1TmFtZXEAfgADTAAHcHVUb0FkZHEAfgADeHB0ADVCbGFja2phY2tEb21haW4uc3RhdGUuZXF1YWxzVG9Db25zdGFudChTdGF0ZSAgLiBQTEFZKXQAAWV0AAVlbnRlcnQAD19uYXR1cmFsZmVhdHVyZXQAB05hdHVyYWxwcHQAEG5hdHVyYWxFbnRlclBsYXlwc3EAfgACdAA1QmxhY2tqYWNrRG9tYWluLnN0YXRlLmVxdWFsc1RvQ29uc3RhbnQoU3RhdGUgIC4gUExBWSlxAH4ABnQABWxlYXZldAAPX25hdHVyYWxmZWF0dXJlcQB+AAlwcHQAEm5hdHVyYWxMZWF2ZVBsYXlfMHB4

*/


/* IntermediateInfo:anchorFeature
rO0ABXQAB0Jhc2ljQko=

*/

